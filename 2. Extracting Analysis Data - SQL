1. Write a SQL query that returns: the user ID, the user’s country, the user’s gender, the user’s device type, the user’s test group, 
whether or not they converted (spent > $0), and how much they spent in total ($0+). 
# left joined all the 3 tables
SELECT
    coalesce(u.id, g.uid, a.uid) as user_id,
    u.country,
    u.gender,
    g.device,
    g.group as category,
    CASE
        WHEN COALESCE(SUM(a.spent), 0) > 0 THEN 1
        ELSE 0
    END AS converted,
    COALESCE(SUM(a.spent), 0) AS total_spent
FROM
    users u
LEFT JOIN groups g ON u.id = g.uid
LEFT JOIN activity a ON coalesce(u.id, g.uid) = a.uid
GROUP BY
    coalesce(u.id, g.uid, a.uid),
    u.country,
    u.gender,
    g.device,
    g.group
ORDER BY
    user_id ASC;


# self analysis 
#Total NOT NULL count 
with cte as(
    select SUM(t2.spent)
from users t1
left join activity t2 on t1.id=t2.uid
group by t1.id,country,gender,t2.spent
HAVING SUM(t2.spent) IS NOT NULL
)
select count(*) as total
from cte;

#Conversion
with cte as(
    select SUM(t2.spent)
from users t1
left join activity t2 on t1.id=t2.uid
group by t1.id,country,gender,t2.spent
HAVING SUM(t2.spent) IS NOT NULL
)
select count(*) as total
from cte;

select count(*) as use
from users;

select (total*100.0)/use as per
from 
(with cte as(
    select SUM(t2.spent)
from users t1
left join activity t2 on t1.id=t2.uid
group by t1.id,country,gender,t2.spent
HAVING SUM(t2.spent) IS NOT NULL
)
select count(*) as total
from cte) as over,
(select count(*) as use
from users)que;
