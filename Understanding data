1. Can a user show up more than once in the activity table? Yes or no, and why?
Yes a user can show up more than once in activity table. The activity table shows the amount spent on purchasing.
The users appearing more than once have made purchases on multiple days.
#users showing up count - 2094 total 
select uid, count(uid) as counts
from activity
group by uid;

#users appearing more than once 
select uid, count(uid) as counts
from activity
group by uid
having count(uid) > 1;

#Total users more than once in activity table - 139 users 
with cte as(select uid, count(uid) as counts
from activity
group by uid
having count(uid) > 1)
select count(*) as total 
from cte;

2. What type of join should we use to join the users table to the activity table?
- Left join 
#left joining users table with activity table 
select COALESCE(users.id, activity.uid) AS id, country,gender,dt,device,spent
from users
left join activity 
on users.id = activity.uid;

#to find the total count of users - 49082
with cte as(
    select COALESCE(users.id, activity.uid) AS id, country,gender,dt,device,spent
from users
left join activity 
on users.id = activity.uid)
select count(*)
from cte;

4. What are the start and end dates of the experiment?
#min date: join date: 2023-01-25 
#max date: end date: 2023-02-26
with cte as(SELECT COALESCE(t1.id, t2.uid,t3.uid) AS id, t2.join_dt, t3.dt
FROM users t1
FULL JOIN groups t2 on t1.id=t2.uid
FULL JOIN activity t3 on COALESCE(t1.id,t2.uid)=t3.uid
GROUP BY COALESCE(t1.id,t2.uid,t3.uid), t2.join_dt,t3.dt
ORDER BY id ASC)
select min(join_dt), max(dt)
from cte;

5. How many total users were in the experiment?
# Total users from users table: 48943
select count(distinct id) as users_count
from users;

6. How many users were in the control and treatment groups?
#A: control: 24343 ,B:Treatment:24600
SELECT count(COALESCE(t1.id, t2.uid)) AS id, t2.group as category
FROM users t1
left JOIN groups t2 on t1.id=t2.uid
GROUP BY category;

7. 
# created a new column and grouped by 0- 46849 and 1 - 2094
with cte as(
    SELECT coalesce(users.id, activity.uid) as id, 
       coalesce(sum(activity.spent),0) as total,
       case when coalesce(sum(activity.spent),0) > 0 then 1
            else 0 end as converted
from users
left join activity on users.id=activity.uid
group by COALESCE(users.id,activity.uid)
order by total asc)
select count(id), converted 
from cte
group by converted;

with cte as(
    SELECT coalesce(users.id, activity.uid) as id, 
       coalesce(sum(activity.spent),0) as total,
       case when coalesce(sum(activity.spent),0) > 0 then 1
            else 0 end as converted
from users
left join activity on users.id=activity.uid
group by COALESCE(users.id,activity.uid)
order by total asc)
    select id, converted
from cte
where converted = 1
group by id, converted;


